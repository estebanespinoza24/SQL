--In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

-- Filtering Null data in customers table 
SELECT
*
FROM
BIT_DB.customers
WHERE
length(order_id) = 6
AND
order_id <> 'Order ID'

--How many orders were placed in January?
SELECT
COUNT(OrderID)
FROM 
BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'

--How many orders where for an iPhone?
SELECT
COUNT(OrderID)
FROM 
BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone'

--Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT
customers.acctnum
FROM
customers
INNER JOIN
BIT_DB.FebSales
ON
customers.order_id = FebSales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID'

--Which product was the cheapest one sold in Janary, and what was the price?
SELECT DISTINCT
Product, price
FROM
BIT_DB.JanSales
ORDER BY
Price ASC
LIMIT 1

--What is the total revenue for each product sold in January?
SELECT
Product,
sum(quantity)*price AS revenue
FROM
BIT_DB.JanSales
GROUP BY 
Product

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT
sum(Quantity),
product,
sum(quantity)*price as revenue,
location
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT
count(distinct cust.acctnum),
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';
